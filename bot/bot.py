import threading
import time
import uuid 
from pytubefix import YouTube
from pathlib import Path
import telebot
import os
import requests
import json
from dotenv import load_dotenv
print('bot started')

load_dotenv()

token = os.getenv('TELEGRAM_TOKEN')
developer_id = os.getenv('DEVELOPER_ID')
SERVER_URL = os.getenv('SERVER_URL')
TEMP_FOLDER = os.path.join(os.getcwd(), "../temp")

if not token or not SERVER_URL:
    raise ValueError("–ù–µ –∑–∞–¥–∞–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: TELEGRAM_TOKEN, SERVER_URL")

hello_msg = """*–ü—Ä–∏–≤–µ—Ç\! üëã 
–Ø –±–æ—Ç\-—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ç–æ—Ä –∏ —É–º–µ—é:*

‚úÖ –°–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ –≤—ã–≤–æ–¥—ã –∏–∑ YouTube –≤–∏–¥–µ–æ

‚ùóÔ∏è –ï—Å–ª–∏ —á—Ç–æ\-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–∏—à–∏: @Pierre\_Morrel

–ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π [–ò–†–¶–≠–ò–¢](https://www\.iddeit\.ru/\#/projects/transcriber)"""

def send_to_server(chat_id, filename):
    try:
        response = requests.post(
            SERVER_URL,
            json={
                "chat_id": str(chat_id),
                "video_path": str(filename)
            },
            timeout=300
        )
        return response.json() if response.status_code == 200 else None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: {e}")
        return None

def show_typing_indicator(chat_id, duration):
    end_time = time.time() + duration
    while time.time() < end_time:
        Bot.send_chat_action(chat_id, 'typing')
        time.sleep(1)

Bot = telebot.TeleBot(token, parse_mode=None)

@Bot.message_handler(commands=["start"])
def start(m, res=False):
    Bot.send_message(m.chat.id, hello_msg, parse_mode='MarkdownV2')
    Bot.send_message(m.chat.id, "–ñ–¥—É —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ üòä")
    Bot.register_next_step_handler(m, handle_link)
    
def handle_link(message):
    url = message.text
    status_msg = Bot.send_message(message.chat.id, "üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ —Å YouTube...")
    
    try:
        os.makedirs(TEMP_FOLDER, exist_ok=True)
        unique_id = uuid.uuid4().hex
        file = f"output_{unique_id}.mp4"
        
        yt = YouTube(url)
        stream = yt.streams.first()
        
        Bot.edit_message_text(
            f"üì• –°–∫–∞—á–∏–≤–∞—é: {yt.title[:50]}...\n"
            f"üì¶ –†–∞–∑–º–µ—Ä: {round(stream.filesize / (1024*1024), 2)} MB",
            message.chat.id,
            status_msg.message_id
        )

        stream.download(output_path=TEMP_FOLDER, filename=file)
        file_path = os.path.join(TEMP_FOLDER, file)

        Bot.edit_message_text(
            "‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ!\n‚öôÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...",
            message.chat.id,
            status_msg.message_id
        )
        
        typing_thread = threading.Thread(
            target=show_typing_indicator, 
            args=(message.chat.id, 15)
        )
        typing_thread.start()

        server_response = send_to_server(message.chat.id, file_path)
        typing_thread.join()
        
        if server_response and server_response.get('status') == 'success':
            transcribation_path = os.path.join(TEMP_FOLDER, f"transcribation_{unique_id}.txt")
            
            with open(transcribation_path, 'w', encoding='utf-8') as f:
                f.write(server_response["full_text"])
            
            with open(transcribation_path, 'rb') as doc:
                Bot.send_document(message.chat.id, doc, caption='–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≤–∏–¥–µ–æ')

            Bot.send_message(message.chat.id, "–°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è: \n" + server_response["summary"])
        else:
            raise Exception("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                     
    except Exception as e:
        Bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)} \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ @Pierre_Morrel üì©")
        Bot.delete_message(message.chat.id, status_msg.message_id)
    
    finally:
        if developer_id:
            Bot.send_message(developer_id, f"sosal? {url}")
        Bot.send_message(message.chat.id, "–ñ–¥—É —Å—Å—ã–ª–∫—É –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ üòâ")
        Bot.register_next_step_handler(message, handle_link)

@Bot.message_handler(content_types=['text'])
def answer(m):
    if m.text == "Admin111" and developer_id:
        Bot.send_message(m.chat.id, text="ADMIN")

print('bot started')
Bot.polling()
